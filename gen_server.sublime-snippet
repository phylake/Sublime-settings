<snippet>
    <content><![CDATA[
-behaviour(gen_server).

-export([init/1, handle_call/3, handle_cast/2, handle_info/2,
         terminate/2, code_change/3]).

-export([
  start_link/${4:0}
]).

-record(state, {$2}).
$0
%% ====================================================================
%% API
%% ====================================================================

start_link($3) ->
  lager:info("$1:start_link()", []),
  gen_server:start_link(?MODULE, [$3], []).

%% ====================================================================
%% gen_server
%% ====================================================================

% -----------
% init
% -----------

init([$3]) ->
  lager:info("$1:init(), PID [~p]", [self()]),
  {ok, #state{${5: $2 = $3 }}}.

% -----------
% handle_call
% -----------

handle_call(not_implemented, _From, State) ->
  {noreply, State}.

% -----------
% handle_cast
% -----------

handle_cast(not_implemented, State) ->
  {noreply, State}.

% -----------
% handle_info
% -----------

handle_info(Info, State) ->
  lager:warning("$1:handle_info(~p, ~p)", [Info, State]),
  {noreply, State}.

% -----------
% terminate
% -----------

terminate(_Reason, _State) ->
  lager:info("$1:terminate()"),
  ok.

% -----------
% code_change
% -----------

code_change(OldVsn, State, Extra) ->
  lager:info("$1:code_change(~p, ~p, ~p)", [OldVsn, State, Extra]),
  {ok, State}.

]]>
</content>
    <tabTrigger>gen_server</tabTrigger>
    <scope>source.erlang</scope>
    <description>gen_server stub</description>
</snippet>
