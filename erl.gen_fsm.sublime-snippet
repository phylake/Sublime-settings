<snippet>
    <content><![CDATA[
-behaviour(gen_fsm).

% API
-export([start_link/0]).

% States
-export([state_a/2, state_a/3,
         state_b/2, state_b/3]).

% gen_fsm
-export([init/1, handle_event/3, handle_sync_event/4, handle_info/3,
         terminate/3, code_change/4]).

-record(state, {}).

%% ====================================================================
%% API
%% ====================================================================

start_link() ->
  lager:info("$1:start_link()", []),
  gen_fsm:start_link(?MODULE, [], []).

%% ====================================================================
%% States
%% ====================================================================
$0
state_a(goto_state_b, State) ->
  lager:info("$1:state_a/2"),
  {next_state, state_b, State}.

state_a('StateName/3 not implemented', {_Pid, _Tag}, State) ->
  {stop, 'StateName/3 not implemented', State}.

state_b(goto_state_a, State) ->
  lager:info("$1:state_b/2"),
  {next_state, state_a, State}.

state_b('StateName/3 not implemented', {_Pid, _Tag}, State) ->
  {stop, 'StateName/3 not implemented', State}.

%% ====================================================================
%% gen_fsm
%% ====================================================================

% -----------------
% init
% -----------------

init([]) ->
  lager:info("$1:init(), PID [~p]", [self()]),
  {ok, state_a, #state{}}.

% -----------------
% handle_event
% -----------------

handle_event(Event, StateName, State) ->
  lager:info("$1:handle_event(~p, ~p, ~p)",[Event, StateName, State]),
  {next_state, StateName, State}.

% -----------------
% handle_sync_event
% -----------------

handle_sync_event(Event, From, StateName, State) ->
  lager:info("$1:handle_sync_event(~p, ~p, ~p, ~p)",[Event, From, StateName, State]),
  {next_state, StateName, State}.

% -----------------
% handle_info
% -----------------

handle_info(Info, StateName, State) ->
  lager:warning("$1:handle_info(~p, ~p, ~p)", [Info, StateName, State]),
  {next_state, StateName, State}.

% -----------------
% terminate
% -----------------

terminate(_Reason, _StateName, _StateData) ->
  ok.

% -----------------
% code_change
% -----------------

code_change(OldVsn, StateName, State, Extra) ->
  {ok, StateName, State}.

]]>
</content>
    <tabTrigger>gen_fsm</tabTrigger>
    <scope>source.erlang</scope>
    <description>gen_fsm stub</description>
</snippet>
