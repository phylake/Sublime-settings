<snippet>
    <content><![CDATA[
-behaviour(gen_server).

-export([init/1, handle_call/3, handle_cast/2, handle_info/2,
         terminate/2, code_change/3]).

-export([
  start_link/0
]).

-record(state, {}).

%% ====================================================================
%% API
%% ====================================================================

start_link() ->
  $0% gen_server:start_link({local, ?MODULE}, ?MODULE, [], []).
  gen_server:start_link(?MODULE, [], []).

%% ====================================================================
%% gen_server
%% ====================================================================

% -----------
% init
% -----------

init([]) ->
  lager:info("PID [~p]", [self()]),
  {ok, #state{}}.

% -----------
% handle_call
% -----------

handle_call(not_implemented, _From, State) ->
  {noreply, State}.

% -----------
% handle_cast
% -----------

handle_cast(not_implemented, State) ->
  {noreply, State}.

% -----------
% handle_info
% -----------

handle_info(Info, State) ->
  lager:warning("Info [~p] State [~p]", [Info, State]),
  {noreply, State}.

% -----------
% terminate
% -----------

terminate(_Reason, _State) ->
  ok.

% -----------
% code_change
% -----------

code_change(_OldVsn, State, _Extra) ->
  {ok, State}.

]]>
</content>
    <tabTrigger>gen_server</tabTrigger>
    <scope>source.erlang</scope>
    <description>gen_server stub</description>
</snippet>
